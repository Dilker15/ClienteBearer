/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client.bearer.presentacion;

import java.awt.Dimension;
import javax.swing.*;
import java.io.*;
import java.util.LinkedList;
import java.util.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 *
 * @author hp
 */
public class panelInicio extends javax.swing.JPanel {

    /**
     * Creates new form panelInicio
     */
    private String path;
    public String comando_config = "";
    
    public panelInicio() {
        
        initComponents();
        this.setSize(450,450);       
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        textsalida = new javax.swing.JTextArea();
        btn_select = new javax.swing.JButton();
        btn_procesar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txt_ruta = new javax.swing.JLabel();
        barProgress = new javax.swing.JProgressBar();

        textsalida.setEditable(false);
        textsalida.setColumns(20);
        textsalida.setRows(5);
        jScrollPane1.setViewportView(textsalida);

        btn_select.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        btn_select.setText("Selecione su proyecto aqui");
        btn_select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_selectActionPerformed(evt);
            }
        });

        btn_procesar.setBackground(new java.awt.Color(204, 204, 204));
        btn_procesar.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        btn_procesar.setText("Procesar");
        btn_procesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_procesarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Informacion de salida");

        txt_ruta.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txt_ruta.setText("ruta:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_ruta, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btn_procesar, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btn_select, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(240, 240, 240))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 23, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 819, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(barProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(txt_ruta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_select)
                .addGap(33, 33, 33)
                .addComponent(btn_procesar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(barProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_selectActionPerformed

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setPreferredSize(new Dimension(800, 600));
        
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);   
        int seleccion = fileChooser.showOpenDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            this.path = file.getAbsolutePath();
            this.txt_ruta.setText(path);
            //System.out.println("Carpeta seleccionada: " + file.getAbsolutePath());
        }     
    }//GEN-LAST:event_btn_selectActionPerformed
    private void mostrar(String texto) {
    String[] lineas = texto.split("\n");
    StringBuilder sb = new StringBuilder();
        int contadorPalabras = 0;
        for (String linea : lineas) {
            String[] palabras = linea.trim().split("\\s+"); // Dividir la línea en palabras
            for (String palabra : palabras) {
                sb.append(palabra).append(" ");
                contadorPalabras++;
                // Agregar un salto de línea cada 20 palabras
                if (contadorPalabras % 20 == 0) {
                    sb.append("\n");
                }
            }// Agregar un salto de línea al final de cada línea original        
            sb.append("\n");
        }
        // Establecer el texto en el JTextArea, eliminando cualquier espacio extra al final
        textsalida.setText(sb.toString().trim());
    }
    
    public void mostrarLinea(String texto){
       textsalida.setText( texto);
       
    }

    private void btn_procesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_procesarActionPerformed
 final String[] output = new String[1];
    if (this.path != null) {
        try {
            List<String> lista = new LinkedList<>();
            lista.add("bearer");
            lista.add("scan");  // comando básico para escanear
            lista.add(this.path);
            
            String[] partes = comando_config.split("\\s+");
            for (String parte : partes) {
                lista.add(parte);
            }

            // Ejecutar el escaneo en un hilo separado
            SwingWorker<String, Integer> worker = new SwingWorker<String, Integer>() {
                @Override
                protected String doInBackground() throws Exception {
                    return escanearProyecto(lista);
                }

                @Override
                protected void done() {
                    try {
                        // Obtener el resultado del escaneo
                        output[0] = get();
                    } catch (Exception e) {
                        output[0] = "Error al ejecutar el escaneo: " + e.getMessage();
                    }
                    mostrarResultado(output[0]);
                }
            };

            
            worker.execute();

            
            int delay = 500; // milisegundos
            javax.swing.Timer timer = new javax.swing.Timer(delay, new java.awt.event.ActionListener() {
                private int value = 0; 

                @Override
                public void actionPerformed(java.awt.event.ActionEvent e) {
                    if (textsalida.getText().trim().isEmpty()) {
                        value += 4;
                        barProgress.setValue(Math.min(value, barProgress.getMaximum()));
                    } else {
                        ((javax.swing.Timer) e.getSource()).stop();  
                    }
                }
            });
            //timer.start();
            
        } catch (Exception e) {
            output[0] = "El proyecto seleccionado no se encuentra contemplado para el uso de bearer: " + e.getMessage();
            mostrarResultado(output[0]);
        }
    } else {
        output[0] = "Seleccion proyecto Para Analizar";
        mostrarResultado(output[0]);
    }
    }//GEN-LAST:event_btn_procesarActionPerformed

    
    public void mostrarResultado(String cadena){
        
        String palabra = ("Security Report");
        int indice = cadena.indexOf(palabra);
        
        String resultado="Reporte De Seguridad"+"\n";
        if (indice != -1) {
            resultado += cadena.substring(indice + palabra.length());
            
        }
       textsalida.setText(resultado);
    }
    
    
    
    public String escanearProyecto(List<String>lista)throws Exception{ // LISTA COMANDOS
        ProcessBuilder pb = new ProcessBuilder(lista);  // AGREGAR MAS COMANDO A LA LISTA.
        System.out.println("EStoy en el escanear luego del hilo");
        pb.redirectErrorStream(true);   
        Process process = pb.start();
        BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
        String line;
        String result="";
      
        
        while ((line = reader.readLine()) != null) {
            //System.out.println(line);
            
            String []datos=line.split("%");
            Pattern p = Pattern.compile("\\d+",Pattern.CASE_INSENSITIVE);
            Matcher m = p.matcher(datos[0]);
            while(m.find()){
                if(line.indexOf("%")!=-1){
                    this.barProgress.setValue(Integer.parseInt(m.group()));
                }
                System.out.println(m.group());
            }
            
            
            
            result+=line+"\n";
            
        }
                    
    return result;
    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar barProgress;
    private javax.swing.JButton btn_procesar;
    private javax.swing.JButton btn_select;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea textsalida;
    private javax.swing.JLabel txt_ruta;
    // End of variables declaration//GEN-END:variables
}
